#
#
# @author Mark Donszelmann
# @version $Id$
#

#
# General
#
freehep.nar.arch=${os.arch}
freehep.nar.os=${os.name}
freehep.nar.linker=LINKER_NOT_DEFINED

#
# Architecture/OS Independent Settings
#
freehep.nar.src=src/main/cpp
freehep.nar.cpp.src.includes=**/*.h **/*.hh **/*.cc **/*.cpp **/*.cxx
freehep.nar.cpp.src.excludes=
freehep.nar.c.src.includes=**/*.h **/*.c
freehep.nar.c.src.excludes=
freehep.nar.fortran.src.includes=**/*.f **/*.for
freehep.nar.fortran.src.excludes=
freehep.nar.test.src=src/test/cpp
freehep.nar.compile.includepath=src/main/include
freehep.nar.compile.sysincludepath=
freehep.nar.compile.withjava=false
freehep.nar.test.compile.includepath=src/test/include
freehep.nar.link.withjava=${freehep.nar.compile.withjava}
freehep.nar.jni.classpath=
freehep.nar.tests=
freehep.nar.includefilesonly=false
freehep.nar.aol=
freehep.nar.dest=${maven.build.dir}/nar
freehep.nar.test.dest=${maven.build.dir}/test-nar

#
# Compilers and Linkers
#
freehep.nar.cpp.compiler=C++_COMPILER_NOT_DEFINED
freehep.nar.c.compiler=C_COMPILER_NOT_DEFINED
freehep.nar.fortran.compiler=FORTRAN_COMPILER_NOT_DEFINED

#
# Unified Compiler and Linker Options
#
freehep.nar.rtti=true
freehep.nar.exceptions=true
freehep.nar.runtime=dynamic
freehep.nar.optimize=none
freehep.nar.multithreaded=false
freehep.nar.incremental=false
freehep.nar.failonerror=true
freehep.nar.libtool=false
freehep.nar.debug=false
freehep.nar.outtype=static
freehep.nar.test.outtype=executable

#
# Additional Compiler and Linker Options
#
freehep.nar.compiler.arg.start=
freehep.nar.compiler.arg.mid=
freehep.nar.compiler.arg.end=
freehep.nar.cpp.compiler.arg.start=
freehep.nar.cpp.compiler.arg.mid=
freehep.nar.cpp.compiler.arg.end=
freehep.nar.c.compiler.arg.start=
freehep.nar.c.compiler.arg.mid=
freehep.nar.c.compiler.arg.end=
freehep.nar.fortran.compiler.arg.start=
freehep.nar.fortran.compiler.arg.mid=
freehep.nar.fortran.compiler.arg.end=
freehep.nar.linker.arg.start=
freehep.nar.linker.arg.mid=
freehep.nar.linker.arg.end=
freehep.nar.linker.test.arg.start=
freehep.nar.linker.test.arg.mid=
freehep.nar.linker.test.arg.end=

#
# Java Settings
#
freehep.nar.java.home=${java.home}/..
freehep.nar.java.include=${freehep.nar.java.home}/include
freehep.nar.java.include.os=OS_SPECIFIC_JAVA_INCLUDE_NOT_DEFINED
freehep.nar.java.vm=OS_SPECIFIC_JVMPATH_NOT_DEFINED

#
# File Prefixes, Suffixes and Extensions
#
freehep.nar.lib.prefix=LIB_PREFIX_UNDEFINED
freehep.nar.static.extension=LIB_STATIC_EXTENSION_UNDEFINED
freehep.nar.shared.extension=LIB_SHARED_EXTENSION_UNDEFINED
freehep.nar.plugin.extension=LIB_PLUGIN_EXTENSION_UNDEFINED
freehep.nar.executable.extension=EXE_EXTENSION_UNDEFINED

#
# Extra Libraries (please use nar dependencies rather than these)
#
freehep.nar.libs.type=static
freehep.nar.libs=
freehep.nar.lib.X.libs=X
freehep.nar.lib.X.dir=${freehep.nar.dest}/lib
freehep.nar.lib.X.type=${freehep.nar.libs.type}

#
# NAR Packaging
#
freehep.nar.arch.includes=

#
# WIN32 ("Windows *" => win32)
#
x86.win32.freehep.nar.linker=msvc
x86.win32.freehep.nar.multithreaded=true
x86.win32.freehep.nar.cpp.compiler=msvc
x86.win32.freehep.nar.c.compiler=msvc
x86.win32.freehep.nar.fortran.compiler=df
x86.win32.freehep.nar.compiler.arg.start=-DWIN32
x86.win32.freehep.nar.java.include.os=${freehep.nar.java.home}/include/win32
x86.win32.freehep.nar.java.vm=${freehep.nar.java.home}/lib
x86.win32.freehep.nar.arch.includes=lib/**/*.lib lib/**/*.dll
x86.win32.freehep.nar.lib.prefix=
x86.win32.freehep.nar.static.extension=.lib
x86.win32.freehep.nar.shared.extension=.dll
x86.win32.freehep.nar.plugin.extension=.dll
x86.win32.freehep.nar.executable.extension=.exe

#
# WIN32 g++
#
x86.win32.g++.freehep.nar.cpp.compiler=g++
x86.win32.g++.freehep.nar.c.compiler=gcc
x86.win32.g++.freehep.nar.fortran.compiler=g77

#
# Linux
#
i386.Linux.freehep.nar.linker=g++
i386.Linux.freehep.nar.cpp.compiler=g++
i386.Linux.freehep.nar.c.compiler=gcc
i386.Linux.freehep.nar.fortran.compiler=g77
i386.Linux.freehep.nar.compiler.arg.start=-DLinux -DGNU_GCC -Df2cFortran -Wall 
i386.Linux.freehep.nar.cpp.compiler.arg.start=-Wno-long-long -Wpointer-arith -Wconversion
i386.Linux.freehep.nar.c.compiler.arg.start=-Wno-long-long -Wpointer-arith -Wconversion
i386.Linux.freehep.nar.fortran.compiler.arg.start=
i386.Linux.freehep.nar.java.include.os=${freehep.nar.java.home}/include/linux
i386.Linux.freehep.nar.java.vm=${freehep.nar.java.home}/jre/lib/i386/client
i386.Linux.freehep.nar.arch.includes=lib/**/*.a lib/**/*.so
i386.Linux.freehep.nar.lib.prefix=lib
i386.Linux.freehep.nar.static.extension=.a
i386.Linux.freehep.nar.shared.extension=.so
i386.Linux.freehep.nar.plugin.extension=.so
i386.Linux.freehep.nar.executable.extension=

#
# Linux icc (C linker)
#
i386.Linux.icc.freehep.nar.cpp.compiler=NONE
i386.Linux.icc.freehep.nar.c.compiler=icc
i386.Linux.icc.freehep.nar.fortran.compiler=ifort
i386.Linux.icc.freehep.nar.compiler.arg.start=-DLinux
i386.Linux.icc.freehep.nar.cpp.compiler.arg.start=-ansi -mp -no-gcc -w1
i386.Linux.icc.freehep.nar.c.compiler.arg.start=-ansi -mp -no-gcc -w1

#
# Linux icpc (C++ linker)
#
i386.Linux.icpc.freehep.nar.cpp.compiler=icpc
i386.Linux.icpc.freehep.nar.c.compiler=icc
i386.Linux.icpc.freehep.nar.fortran.compiler=ifort
i386.Linux.icpc.freehep.nar.compiler.arg.start=-DLinux
i386.Linux.icpc.freehep.nar.cpp.compiler.arg.start=-ansi -mp -no-gcc -w1
i386.Linux.icpc.freehep.nar.c.compiler.arg.start=-ansi -mp -no-gcc -w1

#
# Linux ecc (C linker)
#
i386.Linux.ecc.freehep.nar.cpp.compiler=NONE
i386.Linux.ecc.freehep.nar.c.compiler=ecc
# Should this be efc ?
i386.Linux.ecc.freehep.nar.fortran.compiler=ifort
i386.Linux.ecc.freehep.nar.compiler.arg.start=-DLinux
i386.Linux.ecc.freehep.nar.cpp.compiler.arg.start=-ansi -mp -no-gcc -w1
i386.Linux.ecc.freehep.nar.c.compiler.arg.start=-ansi -mp -no-gcc -w1

#
# Linux ecpc (C++ linker)
#
i386.Linux.ecpc.freehep.nar.cpp.compiler=ecpc
i386.Linux.ecpc.freehep.nar.c.compiler=ecc
# Should this be efc ?
i386.Linux.ecpc.freehep.nar.fortran.compiler=ifort
i386.Linux.icpc.freehep.nar.compiler.arg.start=-DLinux
i386.Linux.ecpc.freehep.nar.cpp.compiler.arg.start=-ansi -mp -no-gcc -w1
i386.Linux.ecpc.freehep.nar.c.compiler.arg.start=-ansi -mp -no-gcc -w1

#
# Linux
#
amd64.Linux.freehep.nar.linker=g++
amd64.Linux.freehep.nar.cpp.compiler=g++
amd64.Linux.freehep.nar.c.compiler=gcc
amd64.Linux.freehep.nar.fortran.compiler=g77
amd64.Linux.freehep.nar.compiler.arg.start=-DLinux -DGNU_GCC -Df2cFortran -Wall 
amd64.Linux.freehep.nar.cpp.compiler.arg.start=-Wno-long-long -Wpointer-arith -Wconversion
amd64.Linux.freehep.nar.c.compiler.arg.start=-Wno-long-long -Wpointer-arith -Wconversion
amd64.Linux.freehep.nar.fortran.compiler.arg.start=
amd64.Linux.freehep.nar.java.include.os=${freehep.nar.java.home}/include/linux
amd64.Linux.freehep.nar.java.vm=${freehep.nar.java.home}/jre/lib/amd64/server
amd64.Linux.freehep.nar.arch.includes=lib/**/*.a lib/**/*.so
amd64.Linux.freehep.nar.lib.prefix=lib
amd64.Linux.freehep.nar.static.extension=.a
amd64.Linux.freehep.nar.shared.extension=.so
amd64.Linux.freehep.nar.plugin.extension=.so
amd64.Linux.freehep.nar.executable.extension=

#
# MacOSX ("Mac OS X" => MacOSX)
#
ppc.MacOSX.freehep.nar.linker=g++
ppc.MacOSX.freehep.nar.java.home=${java.home}
ppc.MacOSX.freehep.nar.java.include=${ppc.MacOSX.freehep.nar.java.home}/include
ppc.MacOSX.freehep.nar.cpp.compiler=g++
ppc.MacOSX.freehep.nar.c.compiler=gcc
ppc.MacOSX.freehep.nar.fortran.compiler=g77
ppc.MacOSX.freehep.nar.compiler.arg.start=-DDarwin -DGNU_GCC -Df2cFortran -Wall 
ppc.MacOSX.freehep.nar.cpp.compiler.arg.start=-Wno-long-long -Wpointer-arith -Wconversion
ppc.MacOSX.freehep.nar.c.compiler.arg.start=-Wno-long-long -Wpointer-arith -Wconversion
ppc.MacOSX.freehep.nar.fortran.compiler.arg.start=
ppc.MacOSX.freehep.nar.java.include.os=
ppc.MacOSX.freehep.nar.java.vm=IGNORED
ppc.MacOSX.freehep.nar.arch.includes=lib/**/*.a lib/**/*.so lib/**/*.dylib lib/**/*.jnilib
ppc.MacOSX.freehep.nar.lib.prefix=lib
ppc.MacOSX.freehep.nar.static.extension=.a
ppc.MacOSX.freehep.nar.shared.extension=.dylib
ppc.MacOSX.freehep.nar.plugin.extension=.bundle
ppc.MacOSX.freehep.nar.executable.extension=

#
# Solaris
#
sparc.SunOS.freehep.nar.linker=CC
sparc.SunOS.freehep.nar.cpp.compiler=CC
sparc.SunOS.freehep.nar.c.compiler=suncc
sparc.SunOS.freehep.nar.fortran.compiler=sunf77
sparc.SunOS.freehep.nar.compiler.arg.start=-lpthread -DSOLARIS2
sparc.SunOS.freehep.nar.linker.arg.start=-lpthread
sparc.SunOS.freehep.nar.java.include.os=${freehep.nar.java.home}/include/solaris
sparc.SunOS.freehep.nar.java.vm=${freehep.nar.java.home}/jre/lib/sparc/server
sparc.SunOS.freehep.nar.arch.includes=lib/**/*.a lib/**/*.so
sparc.SunOS.freehep.nar.lib.prefix=lib
sparc.SunOS.freehep.nar.static.extension=.a
sparc.SunOS.freehep.nar.shared.extension=.so
sparc.SunOS.freehep.nar.plugin.extension=.so
sparc.SunOS.freehep.nar.executable.extension=


	---
FreeHEP NAR Plugin
	---
	---
Mark Donszelmann
	---

NAR Configuration

	The following shows the possible tags in the NAR configuration section:

+--
<configuration>
  <arch/>
  <os/>
  <javaHome/>
  <aol/>
  <targetDirectory/>
  <output/>
  <failOnError/>
  <runtime/>
  <libtool/>

  <libraries>
    <library>
      <type/>
      <linkCPP/>
      <run/>
      <args>
        <arg/>
      </args>
    </library>
  </libraries>

  <tests>
    <test>
      <name/>
      <link/>
      <run/>
      <args>
        <arg/>
      </args>
    </test>
  </tests>

  <linker>
    <name/>
    <incremental/>
    <map/>
    <options>
      <option/>
    </options>
    <clearDefaultOptions/>
    <definitions>
      <definition>
    </definitions>
    <libs>
      <lib>
        <name/>
        <type/>
        <directory/>
      </lib>
    </libs>
    <sysLibs>
      <sysLib>
        <name/>
        <type/>
      </sysLib>
    </sysLibs>
  </linker>    

  <cpp>
    <name/>
    <sourceDirectory/>
    <includes>
      <include>
    </includes>
    <excludes>
      <exclude>
    </excludes>
    <debug/>
    <exceptions/>
    <rtti/>
    <optimize/>
    <multiThreaded/>
    <defines>
      <define/>
    </defines>
    <clearDefaultDefines/>
    <undefines>
      <undefine/>
    </undefines>
    <clearDefaultUndefines/>
    <includePaths>
      <includePath/>
    </includePaths>
    <systemIncludePaths>
      <systemIncludePath/>
    </systemIncludePaths>
    <options>
      <option/>
    </options>
    <clearDefaultOptions/>
  </cpp>

  <c>
    ... same as for <cpp>
  </c>

  <fortran>
    ... same as for <cpp>
  </fortran>
  
  <java>
    <include/>
    <includePaths>
      <includePath/>
    </includePaths>
    <link/>
    <runtimeDirectory/>
    <runtime/>
  </java>

  <javah>
    <name/>
    <bootClassPaths>
      <bootClassPath/>
    </bootClassPaths>
    <classPaths>
      <classPath/>
    </classPaths>
    <jniDirectory/>
    <classDirectory/>
    <includes>
      <include>
    </includes>
    <excludes>
      <exclude>
    </excludes>
  </javah>
  
  <link/>
</configuration>
+--

* configuration

** arch

	The Architecture for which we produce the native library. Examples are
i386, x86, ppc, ppc64, etc... Default is the system property os.arch.

** os

	The Operating System  for which we produce the native library. Examples
are Windows, Linux, MacOSX, SunOS, ... Default is derived from os.name, without spaces and
in the case of Windows generalized.

** javaHome

	The location of the Java installation. Default is derived from the system
property java.home, corrected for MacOSX.

** aol

	The Architecture-OS-Linker qualifier. Default is composed from the arch,
os and linker.name value.

** targetDirectory

	Directory for all NAR related output.
Defaults to "${project.build.directory}/nar" for "compile" goal
Defaults to "${project.build.directory}/test-nar" for "compile-test" goal

** output

	Name of the output. Default is ${project.artifactId}-${project.version}.
	
** failOnError

	Fail on compilation/linking error. Default is true.

** runtime

	Sets the type of runtime library, possible values "dynamic", "static".
Default is dynamic.

** libtool

	Set use of libtool. If set to true, the "libtool " will be prepended to 
the command line for compatible compilers/linkers. Default is false.

* libraries

	Section to specify what type or libraries to create. For each library you may specify:
	
	[type] The type of the library: shared, static, jni, plugin, executable. Default is shared.

	[linkCPP] Specifies if the stdc++ library should be linked with. Default is true.

	[packageName] If specified a NarSystem class will be generated in this package and 
	added to the main jar artifact. The NarSystem class contains the following methods:
	
	* loadLibrary() - which will load the <artifact>-<version> JNI library. 
	
	[]
	
	[run] If true will run this executable (only if type is executable).
	
	[args] List of arguments to be provided to executable.
	
	[]

* tests

	Section to specify which test executables should be created. For each test you may specify:
	
	[name] Name of the executable.
	
	[link] Type of linking to be used: shared or static. Default is shared.

	[run] If true will run this test
	
	[args] List of arguments to be provided to test.
	
	[]

* linker

	Section to specify parameters for the linker.

** name

	The Linker. Some choices are: "msvc", "g++", "CC", "icpc", ...
    Default is Architecture OS specific.

** incremental

	Enables incremental linking. Default is false.

** map

	Enables the production of a map file. Default is false.

** options

	Additional options for the linker.
    Defaults to AOL specific values.

** clearDefaultOptions

	Clear options specified in AOL properties.

** definitions

   	(Windows only, Shared libs only) list of definition files.
    Defaults to none.

** libs

	Adds libraries to the linker. For each lib you have to specify:
    
	[name] Name of the library, or a dependency groupId:artifactId if this library contains sublibraries
    
	[type] Type of linking for this library. Default is shared.
    
	[directory] Location for this library.
	
	[]
  
** sysLibs

	Adds system libraries to the linker. For each syslib you have to specify:
	
	[name] Name of the system library
	
	[type] Type of linking for this system library. Default is shared.
  
  	[]
  	 

* cpp

	Section to specify parameters for the c++ compiler.

** name

	The name of the compiler. Some choices are: "msvc", "g++", "gcc", "CC", "cc", "icc", "icpc", ...
    Default is AOL specific.
    
** sourceDirectory
    
    Source directory for native files
    
** includes

	Include patterns for sources, relative to sourceDirectory in "ant" style.

** excludes
      
	Exclude patterns for sources, relative to sourceDirectory in "ant" style. 
    
** debug
    
    Compile with debug information. Default is false.
    
** exceptions

	Enables generation of exception handling code. Default is true.
    
** rtti

	Enables run-time type information. Default is true.
    
** optimize

	Sets optimization.
  	Possible choices are: "none", "size", "minimal", "speed", "full", "aggressive", "extreme", "unsafe".
  	Default is none.
   
** multiThreaded
   
    Enables or disables generation of multithreaded code.
    Default value: false, except on Windows.
   
** defines

	Additional list of defines.

** clearDefaultDefines
    
    Clear the defines specified in AOL properties.
    
** undefines

	Additional list of undefines.
     
** clearDefaultUndefines
    
	Clear undefines specified in AOL properties.

** includePaths

	Include Paths, relative to ${baseDir}.
    Defaults to "${sourceDirectory}/include"
    
** systemIncludePaths

	System Include Paths, which are added at the end of all include paths
    
** options

	Additional options for the C++ compiler. Some of these options can be set by specific tags (debug, rtti, ...).
    Defaults to AOL specific values.
      
** clearDefaultOptions

	Clear options specified in AOL properties.
	
* c

	Same definitions as for \<cpp\>


* fortran

	Same definitions as for \<cpp\>


* java

	Section to specify parameters for java

** include

	Add Java includes to includepath. Default is false.

** includePaths

	List of Java Include Paths, relative to javaHome.
    Defaults to: "javaHome/include" and "javaHome/include/os-specific".

** link

	Add Java Runtime to linker. Default is false.

** runtimeDirectory

	Relative path from javaHome to the java runtime to link with.
    Defaults to AOL specific value.

** runtime

	Name of the runtime. Default is jvm.

* javah

	Section to specify parameters for javah

** name

	Javah command to run.

** bootClassPaths

	List of boot class paths. By default none.

** classPaths

	List of classpaths. By default the classDirectory directory is included and all dependent classes.

** jniDirectory

	The target directory into which to generate the output.

** classDirectory

	The class directory to scan for class files with native interfaces.

** includes

	The set of files/patterns to include. Defaults to "**/*.class"

** excludes

	A list of exclusion filters. Defaults to none.
	

